server.port=8761
spring.application.name=eureka-server

#This is required if you want to temporary disable spring boot admin authentication
management.security.enabled=false
spring.boot.admin.context-path=/admin
#spring.boot.admin.api-path = /instances
spring.boot.admin.client.url = http://localhost:8762

#spring.security.user.name=vishwa
#spring.security.user.password=vishwa

eureka.instance.hostname=localhost
eureka.instance.leaseRenewalIntervalInSeconds=10
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka

# turn off keycloak spring boot auto-configuration:
# We only want to use Spring Security without servlet container specific infrastructure
# This allows us to pull the Keycloak configuration from here instead of keycloak.json
#keycloak.enabled=false

#keycloak.realm=spring-boot-admin
#keycloak.auth-server-url=http://localhost:8080/auth
# The client_id
#keycloak.resource=spring-boot-admin-app
# The client_secret
#keycloak.credentials.secret=8c1429c1-ff59-4eb0-a882-f5b1a2abece3
#keycloak.ssl-required=external
#keycloak.autodetect-bearer-only=true
# Configures what principal.getName() will return
#keycloak.principal-attribute=preferred_username
#keycloak.use-resource-role-mappings=true
#keycloak.token-minimum-time-to-live=30

#spring.main.allow-bean-definition-overriding=true

#keycloak.enabled=true
#keycloak.realm=creative-ideas
#keycloak.auth-server-url=http://localhost:8080/auth
# The client_id
#keycloak.resource=springboot-admin-microservice
# The client_secret
#keycloak.credentials.secret=617405a8-c895-4eea-9e38-fd2fa8435653
#keycloak.ssl-required=external
#keycloak.use-resource-role-mappings=true
#keycloak.bearer-only= true

